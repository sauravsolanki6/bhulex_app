import 'dart:convert';
import 'dart:developer';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';

import '../Core/apputility.dart';
import '../network/url.dart';
import '../onboarding_screens/onboarding_screen3.dart';
import '../otp_screen/otp_screen.dart';

class Signup1 extends StatefulWidget {
  const Signup1({super.key});

  @override
  _Signup1State createState() => _Signup1State();
}

class _Signup1State extends State<Signup1> {
  bool isChecked = false;
  int? otp;
  TextEditingController mobileController = TextEditingController();
  final _formKey = GlobalKey<FormState>();
  // bool isLoading = false;

  Future<bool> checkNetworkConnection() async {
    var connectivityResult = await (Connectivity().checkConnectivity());
    
    if (connectivityResult == ConnectivityResult.none) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('No internet connection'),
          backgroundColor: Colors.red,
          duration: Duration(seconds: 3),
        ),
      );
      return false;
    }
    return true;
  }
  void _navigateToOTPPage() async {
    String phoneNumber = mobileController.text.trim();

    if (phoneNumber.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('Please enter your mobile number'),
          backgroundColor: Colors.red,
          duration: Duration(seconds: 2),
        ),
      );
      return;
    } else if (phoneNumber.length != 10 ||
        !RegExp(r'^[0-9]+$').hasMatch(phoneNumber)) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('Please enter a valid 10-digit Mobile number'),
          duration: Duration(seconds: 2),
        ),
      );
      return;
    }

    SharedPreferences prefs = await SharedPreferences.getInstance();

    var requestBody = {"mobile_number": phoneNumber};
    String? savedMobile = prefs.getString('mobileNumber');
    print('Saved Mobile Number: $savedMobile');

    print('Request Body: ${jsonEncode(requestBody)}');
    final String url = URLS().login_apiUrl;
    print('Request URL: $url');

    var response = await http.post(
      Uri.parse(url),
      body: jsonEncode(requestBody),
      headers: {'Content-Type': 'application/json'},
    );

    print('Response Status Code: ${response.statusCode}');
    log('Response Body: ${response.body}');

    if (response.statusCode == 200) {
      var jsonResponse = jsonDecode(response.body);

      if (jsonResponse != null && jsonResponse['data'] != null) {
        await prefs.setString('mobileNumber', phoneNumber);
        setState(() {
          otp = jsonResponse['data']['otp'] ?? '';
          print("otp $otp");
        });
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder:
                (context) => OtpScreen(mobilenumber: phoneNumber, otp: otp),
          ),
        );
        var data = jsonResponse['data'];

        var isNew = data['is_new'] ?? false;
        var customerId =
            data['customer_id'] ?? ''; // ✔ This is the correct variable name
        if (customerId != null) {
          AppUtility.login_id = customerId;
        }
        await prefs.setBool('is_new', isNew);
        await prefs.setString(
          'customer_id',
          customerId.toString(),
        ); // ✔ Save in SharedPreferences
        print('Saved Customer ID: $customerId');
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text('OTP sent successfully!'),
            backgroundColor: Colors.green,
            duration: Duration(milliseconds: 200),
          ),
        );
      } else {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text('Failed to get OTP. Please try again later.'),
            duration: Duration(seconds: 1),
          ),
        );
      }
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('Failed to get OTP. Please try again later.'),
          duration: Duration(seconds: 1),
        ),
      );
    }
  }

  Future<void> getOtpFromApi() async {
    final url = Uri.parse(URLS().login_apiUrl);

    final Map<String, dynamic> requestBody = {
      "mobile_number": mobileController,
    };
    try {
      final response = await http.post(
        url,
        body: jsonEncode(requestBody),
        headers: {'Content-Type': 'application/json'},
      );

      if (response.statusCode == 200) {
        final jsonResponse = jsonDecode(response.body);
        final data = jsonResponse['data'];
        print('Response Body: ${response.body}');
        if (data != null) {
          final otp = data['otp'].toString();
          final isNew = data['is_new'] == 1 ? true : false;

          // Store values
          SharedPreferences prefs = await SharedPreferences.getInstance();

          await prefs.setBool('is_new', isNew);

          debugPrint('OTP: $otp | isNew: $isNew');
        } else {
          debugPrint("No data received in response.");
        }
      } else {
        debugPrint("API call failed with status code: ${response.statusCode}");
      }
    } catch (e) {
      debugPrint("API Error: $e");
    }
  }

  @override
  Widget build(BuildContext context) {
    double screenWidth = MediaQuery.of(context).size.width;
    double screenHeight = MediaQuery.of(context).size.height;

    return WillPopScope(
      onWillPop: () async {
        // Navigator.pop(context);

        // Navigator.pushReplacement(
        //   context,
        //   MaterialPageRoute(
        //     builder: (context) => SDateTime(),
        //   ),
        // );
        return false; // Prevent default back navigation
      },
      child: Scaffold(
        resizeToAvoidBottomInset: false, // Prevents background from scrolling

        backgroundColor: Colors.white,
        appBar: AppBar(
          backgroundColor: Colors.white,
          elevation: 0,
          titleSpacing: 0.0, // Reduce space between leading icon and title

          leading: IconButton(
            icon: Image.asset('assets/eva_arrow-back-fill.png'),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => const OnboardingScreen3(),
                ),
              );
            },
          ),
          title: Text(
            'Login', // Replace with your desired title
            style: GoogleFonts.poppins(
              fontWeight: FontWeight.w500,
              fontSize: 18,
              height: 16 / 18, // Equivalent to line-height: 16px
              letterSpacing: 0,
              textStyle: const TextStyle(textBaseline: TextBaseline.alphabetic),
            ),
          ),
          //centerTitle: true, // Center align the title
          bottom: const PreferredSize(
            preferredSize: Size.fromHeight(1.0),
            child: Divider(height: 1, thickness: 1, color: Color(0xFFD9D9D9)),
          ),
        ),

        body: SingleChildScrollView(
          keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.onDrag,

          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              // Background Image
              Container(
                width: screenWidth,
                height: screenHeight * 0.50,

                child: Center(
                  child: Image.asset(
                    'assets/images/bhulex login.png',
                    width:
                        screenWidth *
                        0.63, // Adjust the factor based on your design
                    height:
                        screenHeight *
                        0.30, // Adjust the factor based on your design
                    fit: BoxFit.contain,
                  ),
                ),
              ),

              // const SizedBox(height: 20),

              // Title Text
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 30.0),
                child: Container(
                  alignment: Alignment.centerLeft,
                  child: Text(
                    'Start Your Safe Hassle Free Journey!',
                    textAlign: TextAlign.left,
                    style: GoogleFonts.poppins(
                      fontSize: 18,
                      fontWeight: FontWeight.w600,
                      color: const Color(0xFF36322E),
                    ),
                  ),
                ),
              ),

              const SizedBox(height: 13),

              // Subtitle Text
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 30.0),
                child: Container(
                  alignment: Alignment.centerLeft,
                  child: Text(
                    'Enter your mobile number',
                    style: GoogleFonts.poppins(
                      fontSize: 15,
                      fontWeight: FontWeight.w500,
                      color: const Color(0xFF595959),
                    ),
                  ),
                ),
              ),

              const SizedBox(height: 10),

              // Mobile Number Input Field
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 30.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Container(
                      width: double.infinity,
                      padding: const EdgeInsets.symmetric(
                        horizontal: 12,
                        vertical: 2,
                      ),
                      decoration: BoxDecoration(
                        color: const Color(0xFFF5F5F5),
                        borderRadius: BorderRadius.circular(6),
                        border: Border.all(
                          color: const Color(0xFFD0D0D0),
                          width: 0.8,
                        ),
                      ),
                      child: Row(
                        children: [
                          Image.asset(
                            'assets/images/Call.png',
                            height: 20,
                            width: 20,
                          ),
                          const SizedBox(width: 10),
                          Container(
                            width: 1,
                            height: 40,
                            color: const Color(0xFFD0D0D0),
                          ),
                          const SizedBox(width: 10),
                          Expanded(
                            child: TextFormField(
                              textInputAction: TextInputAction.done,
                              controller: mobileController,
                              keyboardType: TextInputType.number,
                              maxLength: 10,
                              style: const TextStyle(
                                fontSize: 17,
                              ), // Reduce font size
                              decoration: const InputDecoration(
                                //hintText: 'Enter your number',
                                border: InputBorder.none,
                                counterText: "",
                                contentPadding: EdgeInsets.symmetric(
                                  vertical: 8,
                                ), // Adjust height
                              ),
                              validator: (value) {
                                if (value == null || value.isEmpty) {
                                  return 'Please enter your mobile number';
                                }
                                return null;
                              },
                              onChanged: (value) {
                                if (value.length == 10) {
                                  FocusScope.of(context).unfocus();
                                }
                              },
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 10),

              // Checkbox with Description
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 15.0),
                child: Row(
                  children: [
                    Checkbox(
                      value: isChecked,
                      onChanged: (bool? value) {
                        setState(() {
                          isChecked = value!;
                        });
                      },
                      activeColor: const Color.fromARGB(255, 108, 221, 2),
                      checkColor: Colors.white,
                    ),
                    Expanded(
                      child: Text(
                        'A 4 digit security code will be sent via SMS to verify your mobile number!',
                        style: GoogleFonts.poppins(
                          fontSize: 11,
                          fontWeight: FontWeight.w400,
                          color: const Color(0xFF36322E),
                        ),
                      ),
                    ),
                  ],
                ),
              ),

              const SizedBox(height: 10),

              // Login Button
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: 30.0),
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: const Color(0xFFF57C03),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                    padding: const EdgeInsets.symmetric(vertical: 13),
                  ),
                  onPressed: () {
                    if (isChecked) {
                      _navigateToOTPPage();
                    } else {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(
                          content: Text(
                            'Please verify your mobile number!',
                            style: GoogleFonts.poppins(color: Colors.white),
                          ),
                          backgroundColor: Colors.red,
                          duration: const Duration(seconds: 3),
                          behavior: SnackBarBehavior.floating,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                          ),
                        ),
                      );
                    }
                  },
                  //{
                  //   _navigateToOTPPage();
                  // },
                  child: Center(
                    child: Text(
                      'Login',
                      style: GoogleFonts.poppins(
                        fontSize: 18,
                        fontWeight: FontWeight.w500,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
              ),

              const SizedBox(height: 30),
            ],
          ),
        ),
      ),
    );
  }
}
